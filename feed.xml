<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title type="text" xml:lang="fa">مهدی صادقی</title>
<link rel="alternate" type="text/html" href="http://mehdix.ir"/>
<link rel="self" type="application/atom+xml" href="http://mehdix.ir/feed.xml"/>
<updated>2017-01-29T16:42:51Z</updated>
<id>urn:uuid:1e7d9dd8-29e4-475d-adc5-17494fb80445</id>
<author>
	<name>Mehdi Sadeghi</name>
	<uri>http://mehdix.ir</uri>
	<email>sadeghi@mehdix.org</email>
</author>
<rights>Commons Attribution 4.0 International</rights>

	<entry>
		<title>پچ بنویس و التماس کن</title>
		<link rel="alternate" type="text/html" href="http://mehdix.ir/patch.html"/>
		<id>urn:uuid:e2cb01d2-b3ff-4f99-8402-b47613c36cb4</id>
		<updated>2017-01-29T00:00:00Z</updated>
		<category term="پچ"/><category term="سازوکار"/><category term="gtk"/><category term="gnome"/><category term="گنوم"/><category term="مشارکت"/>
			<content type="html">
				<![CDATA[<div dir="rtl"><p>مدتها بود که مشکلی با برنامه‌های گرافیکی مبتنی بر GTK داشتم. آخرسر همت کردم خودم مشکل رو اصلاح کنم. ولی به زودی فهمیدم اصلاح مشکل ساده‌تر از قبولاندن پچ به نگهدارندگان پروژه است.</p>

<p>اول مقداری قصه. هر برنامه گرافیکی از کتابخانه‌هایی برای ساختن رابط کاربری‌اش استفاده می‌کنه. در دنیای ویندوز خیلی‌ها از دات‌نت استفاده می‌کنند. اما کلی پروژه دیگر هم هست که قطعات گرافیکی قابل استفاده در برنامه‌ها رو ساختند و قابل استفاده هستند. در دنیای نرم‌افزار آزاد رایج‌ترین تولکیت‌های گرافیکی GTK و Qt هستند. اولی در گنوم به طور گسترده استفاده شده و دومی در KDE. اگر از دسکتاپ‌های شبیه به گنوم استفاده کنیم، چه نسخه سه چه قدیمی‌تر و چه سایر دسکتاپهایی که فورکی از گنوم هستند اکثر برنامه‌های گرافیکیشون با GTK نوشته شده. مثلا برنامه gedit و Zim که من ازشون روزانه استفاده می‌کنم با این تولکیت نوشته شده‌اند.</p>

<p>حالا مقداری در مورد روال توسعه این برنامه‌ها. در گذشته‌ها که فقط از دور اسم پروژه‌های نرم‌افزار آزاد رو در ایران می‌شنیدم به هر کدام از اونها یا شاید به همشون یکجا مثل یک مدینه‌ی فاضله فکر می‌کردم. تصور اینکه برنامه‌هایی توسط هکرها برای آزادی ما از دست شرکت‌های خبیث نوشته شده! علت جذابیت خاص این مفاهیم شاید زندگی و رشد و نمو در کشوری انقلابی و تغذیه فکری از محصولات فکری نویسندگان معاصر خودمون بود که همگی در این جو زندگی کرده بودند. در مقیاسی بزرگتر هم اونها هم خودشون از  جنبش‌های چپ قرب بیستم تاثیر پذیرفته بودند.</p>

<p>بنابراین با این پیشفرض‌ها فکر می‌کردم که هر برنامه‌ی آزادی از هر نوع فعالیت داوطلبانه حمایت می‌کنه. ولی متاسفانه کم کم به این نتیجه رسیدم که مدینه‌ی فاضله‌ای در کار نیست و جوامع آنلاینی که حول برنامه‌های شکل می‌گیرند بیشتر نه بر اساس ایدئولوژی بلکه بر اساس نیاز به یک راه حل برای یک مشکل بوجود اومدند. مهمترین چیزی که یاد گرفتم اینه که بیشتر برنامه‌های مهم توسط هکرهای مستقل توسعه داده نمی‌شن بلکه برعکس بیشترشون توسط شرکت‌هایی توسعه داده می‌شن که از اون برنامه به طریقی پول درمیارن. این کار رو برای یک هکر مستقل سخت می‌کنه. جلوتر توضیح می‌دم چرا.</p>

<p>برگردیم سر مشکل من با GTK. من موقع تایپ فارسی در gedit و Zim متوجه شدم که وقتی کلید کنترل رو با یا بدون شیفت پایین می‌گیریم تا با کلیدهای جهت لغت به لغت در متن حرکت کنیم، جهت حرکت نشانگر تایپ بر خلاف انتظار ما برعکس جهت فشرده شدن کلیدهاست. مثلا همین الان امتحان کنید. اگر کلید جهت سمت راست رو فشار بدین نشانگر می‌ره سمت چپ و برعکس. از جایی که من به دفعات موقع تایپ از این قابلیت استفاده می‌کنم دنبال علت مشکل گشتم. مثلا متوجه شدم در فایرفاکس و کروم این مشکل نیست. مثلا در باکس نوشتن ایمیل جدید داخل جیمیل این مشکل وجود نداره. علت اینه که کروم و فایرفاکس از Webkit استفاده می‌کنند نه GTK. اول تصمیم گرفت که باگ رو گزارش کنم. بلافاصله متوجه شدم که این مشکلی قدیمی است که <a href="https://bugzilla.gnome.org/show_bug.cgi?id=136059">گزارشی</a>‎ در سال ۲۰۰۳ توسط بهداد اسفهبد که خودش از مشارکت‌کنندگان قدیمی GTK است براش ثبت شده. باگ‌های زیادی هم بعد از اون توسط کاربران فارسی و عرب و عبری زبان برای همین مشکل ثبت شده که همگی ارجاع داده شده‌اند به قدیمی‌ترین باگ. باورتون می‌شه باگی ۱۴ سال در انتظار تعمیر باقی بمونه؟ ولی خب مونده.</p>

<p>من هم کامتنی گذاشتم و یکسال گذشت و خبری نشد و تصمیم گرفتم خودم درستش کنم. کد رو دانلود کردم و شروع کردم به خوندن مستندات پروژه گنوم در مورد GTK. کل پروژه با زبان سی نوشته شده. باید بگم اصلا طوری نوشتن که کاربر تازه‌وارد هیچی نفهمه! اگر خیال می‌کنید که راهنمای درست و حسابی برای مشارکت هست سخت در اشتباهید. حالا این رو هم می‌گم چرا. بالاخره با هزار بدبختی و چند روز وقت گذاشتن و بالا و پایین رفتن در سورس‌فایل‌های چند هزار خطی!! بالاخره مشکل رو فیکس کردم. کلی خوشحال شدم. <a href="https://bug136059.bugzilla-attachments.gnome.org/attachment.cgi?id=343512">پچی ساختم</a> و پیش خودم گفتم الان می‌رم پچ رو سابمیت می‌کنم و کلی فیدبک می‌گیرم و مشکل حل می‌شه، زهی ای خیال باطل!</p>

<p>یه توضیح مختصر بدم که کلیات کار در پروژه‌های مرتبط با گنوم چیه. اول اینکه برای ثبت مشکل از باگ‌زیلا استفاده می‌کنند. برای ارتباط با سایر برنامه‌نویس‌ها هم چند میلینگ لیست دارند. اگر از عالم گیت‌هاب آمده باشید که کارتون ساخته است، چون خبری از پول ریکوئست و <em>Continuious Integration</em> نیست. با دستورات گیت باید یک پج بسازید و بعد پچ رو روی صفحه باگ ارسال کنید. بعدا فهمیدم که اصلا اون فیکس کردن باگ در مقابل مشکلاتی که از اینجا شروع می‌شه هیچه! خلاصه دیگران میان و پچ شما رو ریویو می‌کنند. مثلا اینکه فلان قواعد رو رعایت نکردی، برو بخون و پچ جدید ارسال کن. خلاصه اگر از مرحله ریویو رد بشی یک توسعه دهنده میاد و پچت رو در ریپازیتوری گیت پروژه اعمال می‌کنه.</p>

<p>این روش توسعه در سال ۲۰۱۷ مشکلات جدی‌ای داره. اگر ده یا بیست سال پیش بود مشکلی نبود. ولی امروز این روش به نظر من یک روش ضد مشارکته. اول که خبری از Continious  Integration نیست. یعنی شما پچ رو آپلود می‌کنید ولی هیچ تست اتوماتیکی روی پچ شما اجرا نمی‌شه که مراجعه‌کنندگان بفهمند وضعیت در صورت اعمال این پچ چه خواهد بود. دیگر اینکه شما نمی‌تونید فورک کنید و پول ریکوئست بفرستید. فورک و ارسال پول‌ریکوئست که روش رایج روی گیتهابه تازه‌واردان رو خیلی کمک می‌کنه و مشارکت رو ساده می‌کنه.</p>

<p>ولی مشکل اصلی از نظر من اینه که پروژه‌ی پرکاربردی مثل GTK توسط شرکتی خصوصی اداره می‌شه. یعنی توسعه‌دهندگان اصلی اکثرا کارمندان شرکت‌های ردهت یا گوگل و زوزه هستند. بنابراین علاقه‌ی چندانی به حل مشکل یک کاربر مستقل نشون نمی‌دند مگر اینکه یکی از محصولات خودشون تحت تاثیر این باگ قرار بگیره. من چندین نوبت برای درخواست کمک به کانال چت پروژه مراجعه کردم. حدس زدم که بیشتر افرادی که دائما حاضرند همکارند و بخاطر اینکه مدتهاست روی پروژه کار می‌کنند نیازی به بهبود وبسایت و کمک به هکرهای مستقل ندارند، چون کار خودشون به شیوه فعلی راه می‌افته.</p>

<p>نتیجه‌ای که از مشکلاتی که شرح دادم می‌خوام بگیرم اینه که برای پروژه‌های مستقل مهمه که همکاری کاربران تازه‌کار و هکرهای مستقل رو به خودش جذب کنه. برای اینکار باید مستندات و مثال‌های خوب و گام به گام در وبسایت و از همه مهمتر در خود مخزن گیت پروژه وجود داشته باشه. از پول ریکوئست بجای پچ استفاده بشه و با تست دائمی پچ یا پول‌ریکوئست تا جای امکان به ارسال کننده و دیگران فیدبک داد. در مجموع باید هزینه مشارکت رو به قدری کاهش داد که مقاومتی در ذهن مشارکت‌کننده ایجاد نشه. از طرفی باید یک کامیونیتی به newbie-friendly باشه. یک کامیونیتی باید کاربر تازه‌واردپسند باشه.</p>

<blockquote>
  <p>یک کامیونیتی باید کاربر تازه‌واردپسند باشه.</p>
</blockquote>

<p>در نهایت هم اگر آشنایی با کد سی دارید و یا سرتون برای یک چالش درد می‌کنه برید و پچ من رو ریویو کنید که اگر درست بشه هزاران و شاید میلیون‌ها نفر ازش بهره مند می‌شوند. در ادامه نحوه دریافت و تست پچ رو به اختصار توضیح می‌دم.</p>

<pre dir="ltr"><code>git clone git://git.gnome.org/gtk+
cd gtk+
wget https://bug136059.bugzilla-attachments.gnome.org/attachment.cgi\?id\=343512 -O fix.patch
git apply fix.patch
./autogen
make -j4
cd demos/gtk-demo
./gtk4-demo
</code></pre>
<p>از سایدبار برنامه‌ی دمو باکس متنی Hypertext رو پیدا کنید و داخلش فارسی بنویسید و با gedit روی دستگاه خودتون مقایسه کنید. اگر از نتیجه راضی بودید در ضفحه باگ کامنت بذارید که خدا رو خوش بیاد!</p>

</div>]]>
			</content>
	</entry>

	<entry>
		<title>ماژول راست به چپ اوولوشن</title>
		<link rel="alternate" type="text/html" href="http://mehdix.ir/evolution-composer-rtl.html"/>
		<id>urn:uuid:77d98942-0d2e-4ef3-9556-cec59668789b</id>
		<updated>2017-01-01T00:00:00Z</updated>
		<category term="ایمیل"/><category term="rtl"/>
			<content type="html">
				<![CDATA[<div dir="rtl"><p>من برای بخشی از کارم از کلاینت ایمیل ‬‬<a href="https://wiki.gnome.org/Apps/Evolution">اوولوشن</a> استفاده می‌کنم. برای راحتی فارسی‌نویسی برایش یک افزونه نوشتم.</p>

<p>اول کمی مقدمه. اوولوشن کلاینت ایمیل پروژه‌ی گنوم(نوم) است. سابقه این برنامه به سال ۲۰۰۰ میلادی برمی‌گردد. برنامه به زبان C و رابط گرافیکی با Gtk نوشته شده است. امکانات برنامه هم علاوه بر ارسال و دریافت ایمیل شامل بخش‌های تقویم، دفترچه تلفن، کارها و یادداشت‌هاست. کل برنامه در یک پنجره باز می‌شود به جز پنجره ارسال ایمیل و خواندن ایمیل (فقط متن یک ایمیل در پنجره اصلی نمایش داده می‌شود). امکان خواندن و نوشتن ایمیل‌های رمزشده هم در برنامه به صورت توکار تعبیه شده است.</p>

<p>و حالا شرح مشکل. با اینکه اوولوشن کلاینتی قدیمی است ولی هنوز کامپوزر (پنجره نوشتن ایمیل) فاقد امکان راست به چپ کردن ایمیله. یعنی در مود html کلید میانبر یا دگمه‌ای روی نوارابزار برنامه وجود ندارد که متن را راست به چپ بکند. هرچند ویجت پنجره نوشتن ایمیل این قابلیت را دارد چون از <a href="https://webkit.org/project/">WebKit</a>‏ استفاده می‌کند.</p>

<p>و راه حل. خوشبختانه اوولوشن یک مکانیزم دارد برای نوشتن افزونه. من با کمک این مکانیزم برایش یک افزونه نوشتم که دو تا دگمه به نوارابزار کامپوزر اضافه کند. ولی نحوه انجام این کار تقریبا پیچیده بود. چون ویجت وب‌کیت در یک پراسس مجزا کار خودش را انجام می‌دهد (از چون و چرایش اطلاع ندارم ولی احتمالا بخاطر امنیته) بنابراین باید از روش خاصی برای ارتباط با آن استفاده کرد. بعد از مقداری مطالعه مستندات و بازی با یک افزونه‌ی نمونه و طرح سوال روی کانال IRC برنامه بالاخره توانستم افزونه را سرهم کنم. ولی از شرحش در اینجا صرف نظر می‌کنم، فکر نمی‌کنم زیاد به کار کسی بیاید.</p>

<p>افزونه را از گیت‌هاب می‌شود <a href="https://github.com/mehdisadeghi/evolution-composer-rtl">دریافت</a> کرد. اگر اوولوشن روی دستگاه نصب است فقط کافیست برنامه را نصب کنید:</p>

<pre dir="ltr"><code>$ git clone https://github.com/mehdisadeghi/evolution-composer-rtl
$ cd evolution-composer-rtl
$ mkdir src/build
$ cd src/build
$ cmake ..
$ make
$ sudo make install
</code></pre>

<p>ناگفته پیداست که باید cmake روی دستگاه نصب شده باشد.</p>

<p>اما نتیجه‌گیری. توسعه‌ی این برنامه کار سختیه و اصلا کاربرپسند نیست. یعنی هزینه‌ی ورود و شروع بالاست. پیچیدگی برنامه هم زیاده. برای ایجاد یک تغییر کوچک باید کلی مستندات خواند بعد هم سوال پرسید و بعد هم با یک سورس کد پیچیده سر و کله زد و از همه اینها بدتر اینه که روال توسعه‌ی برنامه مبتنی بر ساخت و ارسال پچه. هیچ اشکالی به این کار وارد نیست ولی سرعت شروع را کند می‌کند و کسی حتی اگر بلد باشد یک فیچر را پیاده کند یا باگی را فیکس کند بخاطر این پیچیدگی‌ها از خیرش خواهد گذشت. در ضمن توسعه پروژه روی جایی مثل گیت‌هاب سرعت همکاری و جذب توسعه‌دهنده را زیاد می‌کند.</p>

</div>]]>
			</content>
	</entry>

	<entry>
		<title>کامپیوتر نه دلاری</title>
		<link rel="alternate" type="text/html" href="http://mehdix.ir/chip-mini-computer.html"/>
		<id>urn:uuid:a9499fe5-12c0-4714-aec3-b29a5dbb5487</id>
		<updated>2016-12-17T00:00:00Z</updated>
		<category term="سخت‌افزار"/><category term="چیپ"/><category term="بورد"/><category term="آرم"/>
			<content type="html">
				<![CDATA[<div dir="rtl"><p>بیش از هجده سال پیش برای اولین بار صاحب یک کامپیوتر شدم. سیصد مگاهرتز سی‌پی‌یو، شانزده مگابایت رم، چهار گیگ هارد و بدون شبکه و مودم با مانیتور سی‌آر‌تی و یک کیس بزرگ با لوازم جانبی. به تازگی کامپیوتری خریدم به قیمت نه دلار که کوچکتر از کف دست یک مرد بزرگسال است. در این نوشته آنها را با هم مقایسه می‌کنم.</p>

<p class="center"><img src="assets/pimg/640px-Intel_Celeron_300A_MHz.jpg" alt="&quot;&quot;" title="سلرون ۳۰۰ - عکس از ویکی‌پدیا" /></p>

<p>همیشه دوست داشتم یک سرور خانگی راه‌اندازی کنم. اما در گذشته گزینه ارزان قیمتی برای اینکارها وجود نداشت. اصلا چیز مناسبی برای مصرف کننده‌ها در بازار نبود. باید یک کامپیوتر حجیم را جایی روشن می‌گذاشتی که بشود به اصطلاح سرور. تازه باید تجهیزات شبکه گران‌قیمت هم تهیه می‌کردی. البته همینکار را هم کردم. آن کامپیوتری که اول نام بردم برای مدتها در دوران دانشجویی نقش سرور اشتراک اینترنت، فایل سرور، چت سرور و غیره را برعهده اشت. البته یک روتر قدرتمند WRT54G و یک کارت شبکه کابلی بهش اضافه کرده بودم. با این وجود مصرف برق و حجم زیاد و سر و صدا و آسیب‌پذیری در برابر قطع برق و گرد و خاک همواره وجود داشت. به طور کلی همه قطعات خیلی آسیب‌پذیر بودند. برخی سی‌پی‌یو‌ها در صورت داغی و گرد گرفتگی فن یا از کار می‌افتادند یا می‌سوختند، هاددیسک‌ها زودتر خراب می‌شدند، پاور دستگاه بر اثر گردگرفتگی و نوسانات برق براحتی خراب می‌شد و قطعات مکانیکی هم که اول صف خرابی بودند.</p>

<p>بنابراین آن کامپیوترهای حجیم و آسیب‌پذیر خانگی گزینه‌ی مناسبی برای تبدیل به سروری نبودند که باید همواره روشن باشد. پس جستجوی من همیشه برای پیدا کردن کامپیوترهای کوچک ادامه داشت. در طی این مدت هم تکنولوژی پیشرفت می‌کرد و روز به روز کامپیوترها سریع‌تر و ارزان‌تر و بهتر می‌شدند. تا اینکه طی سالهای گذشته با بوجود آمدن پدیده <strong>Crowd Funding</strong> شاهد ظهور گروه‌های کوچکی شدیم که با رقبای بزرگ تولید کننده کامپیوتر به رقابت پرداختند. البته بیشتر از رقابت کردن بهتر است بگوییم که خلائی را پر کردند که شرکت‌های سنتی و بزرگ تولید کننده کامپیوتر علاقه‌ای به آن نداشتند. یعنی برای آنها انگیزه مالی کافی وجود نداشت که بیایند و برای دل ما کامپیوترهای کوچک تولید کنند!‌ :)</p>

<p>در این میان «اینترنت چیزها» یا همان <strong>Internet of Things - IoT</strong> هم متولد شد. یعنی کامپیوترها دیگر ناپیدا شدند و درون هر قطعه‌ای نفوذ کردند. درون تلویزیون‌ها، دوربین‌های مداربسته، سنسورها، میکروفن‌ها، کارت‌های اعتباری، کلید‌ها، لامپ‌ها و مانند اینها. به این لیست هرچه تصور می‌کنید هم اضافه کنید باز تمام نمی‌شود. در گذشته نیاز بود برای هر یک از این‌ها یک کامپیوتر یا پردازنده خاص تولید بشود. اما امروزه کامپیوترهای همه منظوره و <strong>Sysstem on Chip - SoC</strong>ها یا همان <strong>سیستم روی تراشه</strong> بقدری کوچک شده‌اند که مقرون به صرفه‌تر که از همین‌ها استفاده کرد. SoCها بجای یک سی‌پی‌یو در حقیقت یک کامپیوتر با معماری <em>فون نویمان</em> را روی تراشه ساختند، با سایر تراشه‌هایی که سابقا جداگانه نصب می‌شدند یا روی مادربورد قرار داشتند، مثل تراشه بلوتوث و وایفای و پشتیبانی از دیسک‌های بزرگ و درگاه‌های سریع مثل USB.</p>

<p>در حوزه مصرف انرژی این قطعات هم انقلابی به پا شد. بلوتوث پدید آمد و روز به روز کم مصرف‌تر و بهتر شد. آخرین نسخه آن که به بلوتوث ۴.۱ مشهور است می‌تواند همواره با چندین قطعه در تماس باشد بدون اینکه انرژی زیادی مصرف کند. در ضمن محققان پا را از این هم فراتر گذاشتند و قطعاتی طراحی کردند که انرژی مورد نیازش را از القای الکترومغناطیسی می‌گیرد و هروقت انرژی کافی ذخیره کرده باشد مدارش را اجرا می‌کند. (این مطلب را با مثال‌هایی که پیدا کنم به روز خواهم کرد).</p>

<p>معماری سی‌پی‌یوها هم متحول شد. با ورود ARM صنعت تولید تراشه به سوی کامپیوترهای جیبی نشانه رفت. جایی که مدت‌ها بود اینتل از آن غفلت کرده بود. انقلاب واقعی اینجا اتفاق افتاد، در اسمارت‌فون‌ها. اسمارت‌فون‌ها سریع‌ترین رشد تکنولوژی را در تاریخ فناوری پشت سر گذاشته‌اند. به سرعت تمام همه چیز به سمت کوچک‌تر شدن و کم مصرف‌تر شدن حرکت کرد. نتیجه آن هم امروز در جیب هر کدام از ما پیدا می‌شود. یک کامپیوتر قدرتمند، با مصرف انرژی کم،‌ بدون هیچ‌گونه صدا و قطعه مکانیکی و مجهز به انواع سنسورهای محیطی، چی‌پی‌اس، بلوتوث و وایفای. وارد مقوله دوربین هم اصلا نمی‌شوم. باورکردنی نیست.</p>

<p class="center"><img src="assets/pimg/chipAllSidesView.png" alt="&quot;&quot;" title="کامپیوتر نه دلاری چیپ - عکس از چیپ" /></p>

<p>اگر نام <a href="https://fa.wikipedia.org/wiki/%D9%82%D8%A7%D9%86%D9%88%D9%86_%D9%85%D9%88%D8%B1">قانون مور</a> به گوشتان خورده باشد، طبق آن هر دو سال تعداد ترانزیستورهای موجود روی واحد سطح تراشه‌ها دو برابر می‌شود. پیتر هینتجنز هم که قبلا راجع به او <a href="peter-hintjens-chose-euthanasia">نوشته‌ام</a> قانون مشابهی دارد که در کتابش بنام <a href="https://www.gitbook.com/book/hintjens/culture-empire/details">ُCulture and Empire</a> شرح داده است. اون این قانون را <em>Cost Gravity</em> می‌نامد، یعنی «گرانش هزینه‌ها». به این معنی که هر دو سال یکبار قیمت تمام‌شده‌ی محصولات الکترونیکی نصف می‌شود. مثلا دو سال دیگر می‌شود هاردیسکی دو برابر حجیم‌تر و بهتر از نسخه فعلی کامپیوترمان را به قیمت فعلی خرید. همینطور برای رم و سایر قطعات. اگر گرانش هزینه‌ها نبود، کامپیوتری سلرون قدیمی من باید همراه با نرخ تورم هر روز گرانتر می‌شد و امروزه میلیون‌ها تومان قیمت داشت. ولی برعکس، من بتازگی کامپیوتر کوچکی خریده‌ام بنام «چیپ» با مشخصات زیر:</p>

<ul>
  <li>سی‌پی‌یو ۱ Ghz</li>
  <li>۵۱۲ مگابایت رم</li>
  <li>بلوتوث ۴.۰</li>
  <li>۴ گیگابایت دیسک پرسرعت</li>
  <li>وایفای ب/جیم/نون</li>
  <li>یواس‌بی ۲.۰</li>
  <li>خروجی ویدیو TRRS و HDMI</li>
  <li>پین‌های ورودی/خروجی جهت اتصال سایر بوردها</li>
</ul>

<p>امکانات بورد از این هم بیشتر است که در ‏<a href="https://github.com/NextThingCo/CHIP-Hardware">مستندات آنها</a> قابل دسترسی است. روی فلش مموری هم یک نسخه سفارشی شده دبیان از پیش نصب شده است.</p>

<p>همه این‌ها فقط ۹ دلار قیمت دارد. یعنی ۳۰ هزار تومان.</p>

<p class="center"><img src="assets/pimg/chip.jpg" alt="&quot;&quot;" title="کامپیوتر نه دلاری - عکس از خودم" /></p>

<p>برق این کامپیوتر از یک کابل مینی‌یو‌اس‌بی تامین می‌شود که امروزه همه جا یافت می‌شود. من چیپ را بدون مانیتور راه اندازی کردم. به کمک <em>GNU Screen</em>. طرز کار در <a href="http://docs.getchip.com/chip.html#headless-chip">مستندات چیپ</a> شرح داده شده. به طور خلاصه چیپ با اتصال به یک پورت یو‌اس‌بی کامپیوتر روشن می‌شود و به عنوان یک قطعه‌ی سریال خودش را به کرنل معرفی می‌کند. اسکرین هم می‌تواند به آن وصل شود و به شما یک ترمینال بدهد که بقیه‌ی کارها مثل تنظیم اولیه‌ی وایفای را آنجا انجام می‌دهید.</p>

<p>من موقع خرید دو تا چیپ سفارش دادم. چهار تای دیگر هم دارم سفارش می‌دهم. سیزده چهارده سال پیش که همراه دوستم قدیمی‌ام علی صادقی یک مودم اکسترنال را شریکی به قیمت ۵۴ هزار تومان خریدیم (چون هیچ کدام پول کاملش را نداشتیم) فکر نمی‌کردم که زمانی بجای یک کامپیوتر چند تا باهم سفارش بدهم.</p>

<p>شاید اولین گروهی که کامپیوتری اینچنینی به تعداد انبوه تولید و روانه بازار کرد <a href="https://www.raspberrypi.org/">رازبری‌پای</a> بود. آنها نه تنها یک کامپیوتر ۲۵ دلاری ساختند بلکه یک کامیونیتی حول آن ایجاد کردند. پروژه‌های تکمیلی زیادی هم حول رازبری‌پای ایجاد شد. شاید مهمترین گروه مخاطب پروژه‌های اینچنینی کودکان و نوجوانان هستند که می‌توانند با بکارگیری این کامپیوترهای ارزان و قابل توسعه (توسط سنسورها و دوربین) کارهای خلاقانه انجام بدهند.</p>

<p>اما این تازه شروع کار است. برای دیدن لیستی از کامپیوترهای کوچک مشابه این <a href="http://www.bigboardlist.com/">لیست</a> را ببینید. برای دیدن لیستی از سخت‌افزارهایی که توسط مردم پشتیبانی مالی می‌شوند <a href="https://www.crowdsupply.com/">وبسایت کراود ساپلای</a> را ببینید.</p>

<p>تکنولوژی به طور عام و کامپیوتر به طور خاص در دسترس‌تر از همیشه است. برای من مهمترین پیامد این تغییر متحول شدن جامعه است. ارزان شدن کامپیوترهای چند منظوره گردش اطلاعات و ایجاد پروژه‌های خلاقانه را بیش از پیش تسهیل خواهد کرد. بویژه جوامعی که از نظر دسترسی به زیرساخت‌های آموزشی لازم فقیر هستند از این تغییر بیشتر سود را خواهند برد. چون حالا برای خلاقیت و پیاده کردن ایده‌هایشان ابزاری ارزان قیمت در اختیار دارند. هر کودک یک خانواده فقیر هم احتمالا می‌تواند یک کامپیوتر سی هزار تومانی بخرد و برنامه بنویسد و پروژه‌ای بسازد.</p>

<p>من با اشتیاق این موضوع را دنبال می‌کنم.</p>
</div>]]>
			</content>
	</entry>

	<entry>
		<title>مکتوب</title>
		<link rel="alternate" type="text/html" href="http://mehdix.ir/maktoob-chrome-extension.html"/>
		<id>urn:uuid:20d96df6-7bad-4fbf-b6b1-4263a6585e9f</id>
		<updated>2016-12-10T00:00:00Z</updated>
		<category term="افزونه"/><category term="کرومیوم"/><category term="مکتوب"/><category term="extension"/><category term="maktoob"/><category term="chromium"/>
			<content type="html">
				<![CDATA[<div dir="rtl"><p>من وقت زیادی در روز به خواندن مقالات اینترنتی اختصاص می‌دهم و بخش مهمی از معلوماتم را از این روش کسب می‌کنم. برای ساده‌تر شدن خواندن صفحات در کرومیوم یک افزونه نوشتم.</p>

<p>قبلا در مطلب <a href="distraction-free-reading">امکان مطالعه بی مزاحمت در فایرفاکس</a> قابلیت خواندن بدون مزاحمت در فایرفاکس را معرفی کرده بودم. موزیلا کد این قابلیت را در یک لایبرری جاوااسکریپت بنام <a href="https://github.com/mozilla/readability">Readability.js</a> منتشر کرده است. از جایی که من بیشتر از کرومیوم استفاده می‌کنم و این قابلیت در آنجا فراهم نبود من یک افزونه کروم بنام «مکتوب» با استفاده از این لایبرری نوشتم. مکتوب را می‌توان از ‬فروشگاه آنلاین گوگل روی کرومیوم یا کروم ‎‬<a href="https://chrome.google.com/webstore/detail/maktoob/oahgddeaidcccjknakhbamebomknkdfo">نصب</a> کرد. کدش هم روی <a href="https://github.com/mehdisadeghi/maktoob">گیت‌هاب</a> قرار دارد.</p>

<p>طرز کار با آن هم بسیار ساده است. فقط کافیست روی آیکون آن در نوارابزار کروم کلیک کنید. محتویات صفحه با یک نسخه متنی جایگزین خواهد شد.</p>

<p>ممکن است مکتوب در نمایش بعضی از صفحات مشکل داشته باشد. ممکن است جهت صفحات فارسی درست تشخیص داده نشود و یا اصلا متن را پیدا نکند. اگر این مشکلات در فایرفاکس هم هست می‌توانید آن را روی گیت‌هاب موزیلا گزارش کنید. مثلا مشکل تشخیص راست به چپ بودن صفحات را من قبلا <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1173548">گزارش</a> کرده ام که ظاهرا رفع شده است. استفاده از تگ <code dir="ltr">article</code> و سایر تگ‌های جدید html کمک زیادی به نمایش صحیح مطالب می‌کند. چون برنامه می‌تواند با خواندن تگ‌ها بفهمد که متن اصلی کجاست، عنوانش چیست و مانند اینها.</p>

<p>نام «مکتوب» را از دوستم علی آیت‌اللهی الهام گرفته‌ام. برای اطلاعات بیشتر به ‏‎<a href="projects/maktoob">صفحه پروژه</a> مراجعه کنید.</p>

</div>]]>
			</content>
	</entry>

	<entry>
		<title>پیتر هینتجنز اُتانازی را انتخاب کرد</title>
		<link rel="alternate" type="text/html" href="http://mehdix.ir/peter-hintjens-chose-euthanasia.html"/>
		<id>urn:uuid:1d1e13af-0be7-4015-b65d-824ee9011007</id>
		<updated>2016-10-06T00:00:00Z</updated>
		<category term="ZMQ"/><category term="0MQ"/><category term="اتانازی"/><category term="مرگ"/><category term="شکرگزاری"/><category term="RIP"/><category term="Pieter"/><category term="Hintjens"/>
			<content type="html">
				<![CDATA[<div dir="rtl"><p>در چهارمین روز اکتبر سال ۲۰۱۶ مصادف با سیزدهم مهرماه سال ۱۳۹۵ آقای <a href="http://hintjens.com/">پیتر هینتجنز</a> نویسنده‌ و برنامه‌نویس پرکار و ایده‌پرداز اصلی پروژه‌ی <a href="http://zeromq.org/">0MQ</a> و رل مدل مورد علاقه من، در پنجاه و سه سالگی با انتخاب <a href="https://fa.wikipedia.org/wiki/%D8%A7%D8%AA%D8%A7%D9%86%D8%A7%D8%B2%DB%8C">اتانازی</a> به زندگی خود خاتمه داد.</p>

<blockquote class="twitter-tweet tw-align-center" data-lang="en"><p lang="en" dir="ltr">I&#39;m choosing euthanasia etd 1pm.<br /><br />I have no last words.</p>&mdash; Pieter Hintjens (@hintjens) <a href="https://twitter.com/hintjens/status/783254242052206592">October 4, 2016</a></blockquote>
<script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>اتانازی به معنای مرگ انتخابی است. پیتر روز ۱۸ آوریل همین سال ‏<a href="https://twitter.com/hintjens/status/722074401798287361">مطلع شده بود</a> که به سرطان روده کشنده مبتلاست و چند هفته تا چندماه بیشتر زنده نخواهد بود. او پنج سال پیش یکبار با جراحی از مرگ نجات پیدا کرده بود ولی اینبار سلول‌های سرطانی باقی مانده وارد مرحله متااستاز شده بودند. یعنی از محل اولیه خارج و در نقاط مختلف بدن تکثیر شده بودند و امید بهبود را از میان برده بودند. هرچند او به شیمی درمانی هم تن داد ولی به قول خودش به عنوان تشکر از پزشکانی که به او پنج سال عمر اضافه هدیه کرده بودند بدنش را در اختیار آنها گذاشت تا داروهای جدید را روی او آزمایش کنند و داده جمع‌آوری کنند.</p>

<p>پیش از آنکه راجع به اتانازی سوال کنید به <a href="http://hintjens.com/blog:115">مقاله‌ی مشهور او</a> (A Protocol for Dying) در این مورد مراجعه کنید. او با اطلاع از سرنوشتی که در انتظارش بود، به روال همیشه، برای مردن هم یک پروتکل نوشت. این پروتکل در مورد نحوه‌ی برخورد با کسانی است که مرگ آنها حتمی است.</p>

<blockquote>
  <p>او با اطلاع از سرنوشتی که در انتظارش بود، به روال همیشه، برای مردن هم یک پروتکل نوشت.</p>
</blockquote>

<p>اما چرا او رل مدل مورد علاقه من است؟ به دلایل مختلف. بگذارید اول شرح دهم چطور با او آشنا شدم. من برای اولین بار هنگامی که مشغول نوشتن تزم بودم در جستجوی یک لایبرری که به من، به شیوه‌ای ساده و سریع و پرقدرت، امکان پیاده‌سازی برنامه‌های توزیع یافته را بدهد با <a href="http://zeromq.org/">0MQ</a> آشنا شدم. 0MQ یک لایبرری به زبان C است. با کمک آن می‌توان برنامه‌های تحت شبکه نوشت بدون آنکه درگیر پیچیدگی‌های معمول این نوع برنامه‌نویسی شد. مثلا به سادگی می‌توان یک برنامه‌ی P2P یا Publish Subscriber یا Client-Server نوشت. یک گنج واقعی است. به زبانهای مختلف هم Wrapper دارد. من برنامه‌ام را با پایتون نوشته بودم.</p>

<p>برای یادگیری API و طرز کار و فلسفه‌ی 0MQ شروع به خواندن <a href="http://zguide.zeromq.org/page:all">ZeroMQ Guide</a> کردم. به سرعت دریافتم که این یک راهنمای معمولی نیست. با خواندن همان پاراگراف‌های اول پرواضح بود که نویسنده فرد خاص و بسیار با استعدادی است. مقاله‌ی جامع و سرشار از نکات ظریف و نیز زبان طنز خاص او باعث شد علاقه‌مند شوم تا او را بشناسم. پس خواندن را شروع کردم. خواندن آن راهنما را به شدت توصیه می‌کنم.</p>

<p>نکته‌ی مهمی که اینجا باید اضافه کنم فلسفه وجودی 0MQ است. چیزی که با خواندن مقالات و کتابهای او فهمیدم. کارهای بزرگ و اثرگذار معمولا هدف و یک فلسفه و یک هویت خاصی در هسته خودشان دارند. یعنی برای چیزی به وجود آمده‌اند. چیزی که بودن آنها را معنی می‌کند و مسیر تکامل آنها را روشن می‌کند. در مورد 0MQ هدف توانمندسازی انسانها برای نوشتن برنامه‌هایی است که شکست‌ناپذیرند. یعنی هیچ قدرتی نتواند آنها را از بین ببرد و بر آدم‌ها مسلط شود. از طریق ارائه‌ی یک ابزار قوی که به هم پیوستن و همکاری انسانها را تقویت بکند. اجازه دهد که آدم‌ها با سرعت و امنیت و راحتی به هم متصل شوند و ایده‌های خلاقانه خودشان را با یکدیگر اجرا کنند. این فلسفه من را جذب کرد.</p>

<p>از 0MQ که بگذریم او یک نویسنده‌ی قهّار بود. کافیست به کتابها و مقالات و RFCهایش مراجعه کنید. کتابهایش به رایگان در سایتش قابل دانلود هستند. اما اگر امکانش برای شما مهیاست کتابهایش را بخرید، هرچند او درگذشته است ولی عواید فروش به دو کودک خردسالش می‌رسد. به گفته خودش از زمانی که پنج سال پیش عمر دوباره‌ای به دست آورد تلاش‌هایش را چند برابر کرد. پی در پی می‌نوشت. همه‌ی کتابهایش در این دوره منتشر شده‌اند. من فکر می‌کنم نوشتن عالی‌ترین تجلی مبارزه‌ی ما با نیستی است. وقتی می‌نویسیم هستیم. بیراه نیست که او هیچ کلام آخری نداشت، همه را پیش از آن نوشته است.</p>

<p>یکی از نوشته‌های تاثیرگذار او پروتکل <a href="https://rfc.zeromq.org/spec:22/C4/">C4</a> یا همان Collective Code Construction Contract است. در این پروتکل یک پیشنهاد جهت همکاری در راستای ساختن پروژه‌های نرم‌افزار آزاد است. اینکه چطور با هم به بهترین شیوه همکاری کنیم. دانش اجتماعی او در ایجاد این پروتکل نقل مهمی داشته. مثلا کافیست اشاره کنم که در این پروتکل هر پول ریکوئست (Pull Request) بلافاصله مرج (Merge) می‌شود. حتما تعجب کردید. بله بلافاصله. حتی اگر باعث خرابی پروژه بشود. اما مگر می‌شود؟ بله می‌شود. همانطور که ویکی‌پدیا هم با وجود اینکه همه ی‌توانند آنرا ویرایش کنند، برخلاف باور اولیه‌ی خیلی‌ها، کار کرد و کار می‌کند و پیش می‌رود. در این پروتکل تاکید نه روی کد بلکه روی انسانهاست. یکی از جمله‌های او که در ذهنم حک شده است اینست: «نرم‌افزار در مورد کد نیست، بلکه در مورد آدم‌هاست».</p>

<blockquote>
  <p>نرم‌افزار در مورد کد نیست، بلکه در مورد آدم‌هاست.</p>
</blockquote>

<p>یکی از ویژگی‌های مهم پیتر توانایی او در ساختن کامیونیتی‌های آنلاین است، که او آنها را «سیستم‌های زنده» می‌نامد. در این باره از او ویدیوهای زیادی در اینترنت باقی مانده است. ولی از همه مهمتر اینکه اون دانش خود را در <a href="https://www.amazon.com/dp/B01F8I7Z7E">کتابی</a> بنام <a href="https://www.gitbook.com/book/hintjens/social-architecture/details">Social Architecture</a> مستند کرده است.</p>

<p>در همین راستا کتاب دیگری دارد بنام <a href="https://www.gitbook.com/book/hintjens/psychopathcode/details">The Psychopath Code</a>. در این کتاب فقط از رفتار گروهی آدم‌ها و Psychopath‌ها حرف می‌زند. یاد می‌دهد چطور آنها را ببینیم و بشناسیم. کتاب جالبی است. می‌گوید از هر بیست و پنج نفر یکی Psychopath است. بعد از خواندن این کتاب ناخودآگاه آدم‌هایی با آن مشخصات را در اطراف خودتان مشاهده می‌کنید.</p>

<p><a href="http://hintjens.com/books">کتابهای دیگرش</a> را می‌توانید در وبسایتش ببینید دانلود کنید یا بخرید. همچنین لیست ویدیوها و پادکست‌هایش هم در وبسایتش وجود دارد. من برای مدتی طولانی مشغول خواندن مقالاتش خواهم بود. راستی به <a href="https://github.com/hintjens">اکانت گیت‌هابش</a> هم سر بزنید تا ببینید که حتی از روی تخت بیمارستان هم به مرج کردن پی‌آرها ادامه داده و به حجم فعالیت‌هایش پی ببرید.</p>

<p>هرچند از زمانی که به وجود او پی بردم تا زمان مرگ او دو سال بیشتر طول نکشید ولی نه تنها از این بابت بسیار شکرگزارم، بلکه باید اعتراف کنم او جزو افرادی است که به نوعی روح من را با نوشته‌هایشان لمس کردند و اثر ماندگاری روی طرز فکر و نگاه من به بسیاری از مسایل باقی گذاشتند.</p>

<p>پیتر، به خاطر همه‌ی چیزهایی که به من آموختی واقعا متشکرم.</p>

</div>]]>
			</content>
	</entry>

	<entry>
		<title>قانون اساسی به فرم YAML</title>
		<link rel="alternate" type="text/html" href="http://mehdix.ir/iran-constitution.html"/>
		<id>urn:uuid:79de2ab4-ac94-4f4e-b40e-171de96d4d04</id>
		<updated>2016-08-07T00:00:00Z</updated>
		<category term="قانون"/><category term="متادیتا"/><category term="yaml"/><category term="ایران"/>
			<content type="html">
				<![CDATA[<div dir="rtl"><p>قانون اساسی مهمترین قانون هر کشوری است. ولی گیگ‌ها نیاز دارند که این قانون را با برنامه‌هایشان پردازش کنند. من هم قانون اساسی جمهوری اسلامی ایران را برای خاطر گیک‌ها به فرمت <a href="http://yaml.org/">YAML</a> تبدیل کردم.</p>

<p>نهادهایی که با سرمایه ملت اداره می‌شوند وظیفه‌شان است که داده‌هایی که به مردم تعلق دارد را منتشر کنند. در دنیای امروز این داده‌ها باید برای برنامه‌ها قابل خواندن باشد. هرچند نهادهای اداره کننده کشور ما راه درازی پیش رو دارند تا اینکه روزی بتوانند این نیاز را مطابق انتظار یک گیک برآورنده کنند. به همین خاطر من دست به کار شدم و قانون اساسی را از <a href="http://rc.majlis.ir/fa/content/iran_constitution">سایت مرکز پژوهش‌های مجلس</a> پیاده کرده و آن را به فرمت YAML نشانه‌گذاری کرده و <a href="https://github.com/mehdisadeghi/iranconstitution/blob/master/constitution.yaml">روی گیت‌هاب</a> منتشر کردم. استفاده از این فایل طبق مجوز <a href="http://creativecommons.org/licenses/by/4.0/">CC 4.0</a> آزاد است.</p>

<p>وقتی داده‌های عمومی مانند قانون در قالب‌های استاندارد در دسترس باشند می‌توان برنامه‌هایی نوشت که به سادگی آنها را خوانده و پردازش کنند. مثلا می‌شود هر اصل قانون اساسی را پیدا کرد. بدون داشتن داده در یک فرمت استاندارد و تحت یک مجوز آزاد امکان این کار نیست. YAML هم یک زبان نشانه‌گذاری برای ذخیره و بازیابی داده‌های متنی است. زبان JSON زیر مجموعه آن محسوب می‌شود. مهمترین ویژگی YAML خوانایی بالای آن برای انسانهاست. بنابراین می‌توان با پایتون یا روبی یا نود فایل را خواند و آن را اصل به اصل جستجو کرد یا فهمید کدام اصل اصلاح شده است یا اینکه لغات کلیدی را نسبت به هر اصل و بخش مرتب کرد و یا موارد دیگری از این دست را انجام داد. از همه اینها گذشته به واسطه خوانا بودن فایل آن را می‌توان به سادگی در هر ویرایشگر متنی خواند و احیانا اصلاح کرد.</p>

<p>حین انتقال متن خام از سایت مرکز پژوهش‌های مجلس متوجه نکات جالبی شدم. اول اینکه که حدس می‌زنم داده‌اند کسی متن را از روی یک متن چاپی تایپ کرده است چرا که غلط‌های مختلف تایپی در متن وجود داشت. دیگر اینکه اصلا خبری از نیم‌فاصله نبود.  تا جایی که می‌توانستم اصلاح کردم اگر ایرادی مشاهده کردید لطفا روی گیت‌هاب تصحیح کنید و پول ریکوئست بفرستید. در ضمن طرف خیلی هم خسته بوده است. گاهی جملاتی را دوبار تایپ کرده، گاهی هم قانون جدید و قدیم را یکی نوشته که گاها مجبور شدم با <a href="http://www.shora-gc.ir/Portal/Home/ShowPage.aspx?Object=News&amp;ID=346db5f5-6205-4ec0-a619-f6d7d57be193&amp;LayoutID=df97d031-b451-4421-819a-5012d4705435&amp;CategoryID=ff0668dd-649c-4d53-a9ba-23ec1caed3be">سایت مجلس خبرگان</a> کنترل کنم. (آنجا وضع تایپ بدتر بود، مثال از یای فارسی خبری نبود!) اما سخت‌ترین قسمت کار تصمیم‌گیری برای قالب فایل بود طوری که نه سیخ بسوزد نه کباب. یعنی هم فایل خوانایی خودش را حفظ کند و هم من بتوانم کارم را راحت‌تر انجام بدهم.</p>

<p>ساختار کلی فایل به شرح زیر است:</p>

<div dir="ltr" class="language-yaml highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre><span style="color:#606">The Constitution</span>:
  <span style="color:#606">Introduction</span>:
  <span style="color:#606">Principles</span>:
    - <span style="background-color:hsla(0,100%,50%,0.05)"><span style="color:#D20">chapter:</span></span>
      <span style="color:#606">index</span>:
      <span style="color:#606">history</span>:
        -
      <span style="color:#606">text</span>:
</pre></div>
</div>
</div>
<p>در فایل کلیدهای مختلفی بکار برده‌ام. اما مهمترین کلیدهای بکار رفته در فایل هم به شرح زیر هستند:</p>

<ul>
  <li>The Constitution: همه قوانین زیر این مدخل نوشته شده‌اند، یعنی قانون اساسی</li>
  <li>Introduction: مقدمه‌ی قانون اساسی جمهوری اسلامی ایران</li>
  <li>Principles: اصول قانون اساسی. یک لیست است.</li>
  <li>chapter: شماره فصل. قانون اساسی در چهارده فصل تنظیم شده است.</li>
  <li>index: شماره اصل قانون</li>
  <li>history: نسخه‌های قبلی. در حال حاضر بعضی اصول فقط یک تاریخچه دارند که به اصلاحیه سال ۱۳۶۸ باز می‌گردد.</li>
  <li>text: متن هر اصل از قانون</li>
</ul>

<p>برای خواندن فایل در پایتون می‌توانید از <code dir="ltr">pyyaml</code> استفاده کنید:</p>

<div dir="ltr" class="language-python highlighter-coderay"><div class="CodeRay">
  <div class="code"><pre><span style="color:#F00;background-color:#FAA">$</span> pip install pyyaml --user
<span style="color:#F00;background-color:#FAA">$</span> git clone https://github.com/mehdisadeghi/iranconstitution
<span style="color:#F00;background-color:#FAA">$</span> cd iranconstitution
<span style="color:#F00;background-color:#FAA">$</span> python
&gt;&gt;&gt; <span style="color:#080;font-weight:bold">import</span> <span style="color:#B44;font-weight:bold">yaml</span>
&gt;&gt;&gt; f = <span style="color:#369;font-weight:bold">open</span>(<span style="background-color:hsla(0,100%,50%,0.05)"><span style="color:#710">'</span><span style="color:#D20">constitution.yaml</span><span style="color:#710">'</span></span>)
&gt;&gt;&gt; data = yaml.load(f, Loader=yaml.CLoader) <span style="color:#777"># CLoader is super fast</span>
&gt;&gt;&gt; <span style="color:#369;font-weight:bold">len</span>(data[<span style="background-color:hsla(0,100%,50%,0.05)"><span style="color:#710">'</span><span style="color:#D20">The Constitution</span><span style="color:#710">'</span></span>][<span style="background-color:hsla(0,100%,50%,0.05)"><span style="color:#710">'</span><span style="color:#D20">Principles</span><span style="color:#710">'</span></span>])
<span style="color:#00D">177</span>
&gt;&gt;&gt; print(data[<span style="background-color:hsla(0,100%,50%,0.05)"><span style="color:#710">'</span><span style="color:#D20">The Constitution</span><span style="color:#710">'</span></span>][<span style="background-color:hsla(0,100%,50%,0.05)"><span style="color:#710">'</span><span style="color:#D20">Principles</span><span style="color:#710">'</span></span>][<span style="color:#00D">1</span>][<span style="background-color:hsla(0,100%,50%,0.05)"><span style="color:#710">'</span><span style="color:#D20">text</span><span style="color:#710">'</span></span>])
</pre></div>
</div>
</div>

<p>به روال گذشته این پروژه هم <a href="projects/iranconstitution">صفحه اختصاصی خودش</a> را دارد. همچنین تشکر ویژه از ‏جادی بابت معرفی این پروژه در <a href="http://jadi.net/2016/08/mondays-mordad-95/">لینک‌های شاد آخر ماه مرداد</a>.</p>

</div>]]>
			</content>
	</entry>

	<entry>
		<title>بوکمارکر</title>
		<link rel="alternate" type="text/html" href="http://mehdix.ir/bookmarker.html"/>
		<id>urn:uuid:29e00ded-3fd4-418f-a449-9ccbda0bf92e</id>
		<updated>2016-06-18T00:00:00Z</updated>
		<category term="افزونه"/><category term="کرومیوم"/><category term="بوکمارک"/><category term="extension"/><category term="bookmark"/><category term="chromium"/>
			<content type="html">
				<![CDATA[<div dir="rtl"><p>من از تگ‌گذاری بوکمارک‌هایم برای جستجوی آنها استفاده می‌کنم. در فایرفاکس جستجو بر اساس تگ آسان است اما در کروم اینطور نیست. برای ساده‌تر کردن جستجوی بوکمارک‌هایم در کروم یک افزونه نوشتم.</p>

<h1 id="مدیریت-دادههای-فردی">مدیریت داده‌های فردی</h1>
<p>وقتی داده‌هایی که ذخیره می‌کنیم افزایش پیدا می‌کند کم کم نیاز به راهی برای مدیریت داده‌ها اهمیت خودش را نشان می‌دهد. راه رایج درست کردن پوشه‌های مختلف و نامگذاری آنها بر حسب موضوع یا تاریخ و مانند اینهاست. هرچند اینکار برای داده‌ها مقدور است (اما فاقد متاداده است که بعدا به آن خواهم پرداخت) اما برای لینک‌ها اینطور نیست. خوشبختانه مرورگرها از گذشته امکان به خاطر سپردن لینک‌های گلچین شده را داشته‌اند ولی برای دسته‌بندی آنها معمولا هم به همان روش پوشه‌سازی متوسل شده‌اند. اما جستجوی آنها برای من همواره مشکل و ناکارآمد بود.</p>

<h1 id="جستجوی-کامل-متنی">جستجوی کامل متنی</h1>
<p>فایرفاکس و کروم هر دو امکان جستجوی کامل متنی را بر روی لینک‌های ذخیره شده فراهم می‌کنند. هر دو این مرورگرها موقع گلچین (بوکمارک) کردن یک لینک علاوه بر خود لینک، عنوان (title) سایت را هم ذخیره می‌کنند. موقع جستجو هر دوی این مقادیر جستجو می‌شود. فایرفاکس امکان این را دارد که هنگام ذخیره لینک صریحا تگ‌هایی به آن اختصاص بدهیم ولی کروم این امکان را ندارد. راه حلی که من پیدا کرده‌ام اینست که هنگام ذخیره لینک در کروم، عنوان سایت را ویرایش می‌کنم و تگ‌های مورد نظرم را به آن اضافه می‌کنم. این راهکار مشکل کمبود تگ‌گذاری در کروم را برای من حل کرده است.</p>

<h1 id="کاستی-جستجوی-گلچینها-در-کروم">کاستی جستجوی گلچین‌ها در کروم</h1>
<p>کروم موقع جستجو در نوار آدرسش (omnibox) حداکثر ۶ نتیجه را پیشنهاد می‌کند. این مقدار هارد کد شده است. مشکل من این بود که الگوریتم جستجوی کروم لزوما به بوکمارک‌های من اولویت نمی‌داد و نتایجی هم از اینترنت در مقادیر پیشنهادی می‌گنجاند. بنابراین «بوکمارکر» را نوشتم که بتوانم به صورت اختصاصی فقط گلچین‌ها را جستجو کنم.</p>

<h1 id="طرز-کار-بوکمارکر">طرز کار بوکمارکر</h1>
<p>در نوار آدرس <code dir="ltr">bb</code> وارد می‌کنیم و بعد کلمات کلیدی دلخواهمان را تایپ می‌کنیم. بوکمارکر نتایج جستجو و تعداد آنها را در زیر نوارد آدرس نمایش می‌دهد.</p>

<p class="center"><img src="assets/pimg/bookmarker.png" alt="&quot;Something went wrong.&quot;" title="بوکمارکر فقط گلچین‌ها را جستجو می کند." /></p>

<h1 id="صفحه-اختصاصی-پروژه">صفحه اختصاصی پروژه</h1>
<p>برای اطلاعات بیشتر به ‏‎<a href="projects/bookmarker">صفحه پروژه</a> مراجعه کنید. افزونه را می‌توانید از ‏‏‬<a href="https://chrome.google.com/webstore/detail/dogmmdcflcflabibfbecmfgaaobifimo">اپ استور کروم‮‮</a> نصب کنید.</p>
</div>]]>
			</content>
	</entry>

	<entry>
		<title>کارت هوشمند</title>
		<link rel="alternate" type="text/html" href="http://mehdix.ir/plug-up-yubikey-4-hardware-keys.html"/>
		<id>urn:uuid:99e28963-3c19-49d7-961b-f4c25c59ad7e</id>
		<updated>2016-05-22T00:00:00Z</updated>
		<category term="yubikey"/><category term="GnuPG"/><category term="smartcard"/><category term="امنیت"/><category term="رمزنگاری"/><category term="اسمارت‌کارت"/>
			<content type="html">
				<![CDATA[<div dir="rtl"><p>به تازگی دو کلید سخت‌افزاری تهیه کردم، یکی توسط دوستی به من هدیه داده شده و یکی را هم خریدم. هر دو آنها از پروتکل U2F پشتیبانی می‌کنند ولی کلید Yubikey 4 قابلیت‌های بیشتری دارد از جمله قابلیت اسمارت‌کارت که در این مقاله به آن می‌پردازم. البته من متخصص امنیت نیستم و این مطلب صرفا جنبه کاربردی دارد.</p>

<h1 id="چرا-کلید-سختافزاری">چرا کلید سخت‌افزاری؟</h1>
<p>در حالت عادی ما با بک کلمه عبور و پسورد به حساب کاربری‌مان دسترسی پیدا می‌کنیم. این روش حداقل امنیت را تامین می‌کند. اگر کسی پسورد ما را بدست بیاورد به حساب ما دسترسی پیدا می‌کند. بهترین روشی که در حال حاضر برای امن‌تر کردن دسترسی به حسابها بوجود آمده است «تصدیق‌یابی دو مرحله‌ای» است. در این روش بعد از وارد کردن پسورد اصلی کاربر باید یک پسورد یکبار مصرف نیز وارد کند. این پسورد می‌تواند از طریق یک برنامه تولید شود یا از طریق تلفن یا پیامک به شماره تلفن از پیش مشخص شده فرد ارسال بشود و یا اینکه توسط یک کلید سخت‌افزاری تولید بشود. معمولا از کاربر هر سی روز یکبار این پسورد دوم پرسیده می‌شود. نکته مهم در مورد پسورد‌های یکبار مصرف اینست که اگر کسی آنها را به دست بیاورد نمی‌تواند هیچ سوءاستفاده‌ای بکند چرا که پسورد باطل شده است.</p>

<p>در صورتی که از کلید سخت‌افزاری برای اینکار استفاده شود، فقط کافیست که کلید در پورت USB وارد شده باشد. در مورد Yubikey 4 باید موقعی که مرورگر درخواست می‌کند، دگمه روی کلید لمس شود.</p>

<blockquote>
  <p>کارت هوشمند ابزاری برای پشتبیان‌گیری از کلیدهای خصوصی نیست.</p>
</blockquote>

<p>کلید سخت‌افزاری برای افرادی که از کامپیوترهای مختلفی استفاده می‌کنند یا ممکن است همواره گوشی هوشمند به همراه نداشته باشند گزینه مناسبی است. در ضمن از تغییرات نرم‌افزار گوشی هوشمند هم تاثیر نمی‌پذیرد و کار با آن ساده است. از همه اینها مهمترین برای من قابلیت انتقال کلیدهای خصوصی در فرآیند رمزنگاری به کمک کلیدهای عمومی است. در این روش من کلیدهای خصوصی‌ام را روی کلیدسخت‌افزاری منتقل می‌کنم و برنامه GnuPg کلیدهای خصوصی را همواره از روی کلید می‌خواند و نه از روی دیسک. این قابلیت کلید آنرا تبدیل به یک اسمارت‌کارت یا «کارت هوشمند» می‌کند. نکته مهمی که اینجا وجود دارد اینست که بدانیم کلید سخت‌افزاری روشی برای پشتبیان‌گیری از کلیدهای خصوصی نیست، بلکه صرفا جهت راحت‌تر کردن دسترسی به کلیدها بکار می‌رود بدون اینکه آنها را در خطر بیاندازد. چرا که امکان دانلود کردن کلید خصوصی از Yubikey 4 وجود ندارد.</p>

<blockquote>
  <p>امکان دانلود کردن کلید خصوصی از Yubikey 4 وجود ندارد.</p>
</blockquote>

<p>در تصویر زیر هر دو کلید قابل مشاهده هستند. یکی کوچکتر و شبیه سیم‌کارت و محصول شرکت <a href="http://happlink.com/products.html">Happlink</a> است. قیمتش تقریبا پنج یورو است. دیگری مشکلی رنگ و بزرگتر است بنام <a href="https://www.yubico.com/2015/11/4th-gen-yubikey-4/">Yubikey 4</a> و محصول شرکت Yubico که به گمانم معروف‌ترین شرکت تولید‌کننده کلید‌های سخت‌افزاری است. قیمت این یکی چهل یورو است.</p>

<p class="center"><img src="assets/pimg/hardware-keys-2016-05-22-075322.jpg" alt="image not found" title="کلید‌های سخت‌افزاری Yubikey 4 و plug-up" /></p>

<h1 id="چرا-رمزنگاری-با-کلید-عمومی">چرا رمزنگاری با کلید عمومی؟</h1>
<p>مدتهاست ایده‌ی اینکه ما ایمیل رمزنگاری شده به یکدیگر ارسال کنیم در عمل شکست خورده است. بنابراین اصلا چرا از رمزنگاری استفاده کنیم؟ پاسخ اینست که رمزنگاری عمومی برای اهداف مختلفی استفاده می‌شود من جمله امضای بسته‌های نرم‌افزاری. مثلا برای آپلود یک پکیج به یک مخزن ppa روی لانچ‌پد باید آنرا امضا کرد. همینطور برای آپلود یک پکیج به مخازن دبیان باید آنها را امضا کرد. چنانچه در کامیونیتی آنلاینی مثل آنچه در مورد دبیان وجود دارد نیز بخواهیم فعالیت کنیم باید کلید شناخته شده‌ای در  Web of Trust داشته باشیم. چرا که ما افراد را شخصا ملاقات نمی‌کنیم و تنها از طریق ایمیل و امضای دیجیتالی ما است که آنها به ما اعتماد می‌کنند. یا مثلا اگر از بیت‌کوین استفاده کنید باز هم باید با کلیدهایمان تراکنش‌ها را امضا کنیم و بدون دسترسی به کلید‌ها امکان دسترسی به منابع مالی وجود نخواهد داشت.</p>

<p>#شناساندن کلید‌ها به لینوکس
قسمت اول افزودن udev rules های لازم برای شناساندن این کلید‌هاست. کافیست یک فایل جدید در مسیر <code dir="ltr">/etc/udev/rules.d/70-u2f.rules</code> ایجاد کنیم و محتوای زیر را به آن اضافه کنیم:</p>

<pre dir="ltr"><code># this udev file should be used with udev 188 and newer
ACTION!="add|change", GOTO="u2f_end"

# Yubico YubiKey
KERNEL=="hidraw*", SUBSYSTEM=="hidraw", ATTRS{idVendor}=="1050", ATTRS{idProduct}=="0113|0114|0115|0116|0120|0402|0403|0406|0407|0410", TAG+="uaccess"

# Happlink (formerly Plug-Up) Security KEY
KERNEL=="hidraw*", SUBSYSTEM=="hidraw", ATTRS{idVendor}=="2581", ATTRS{idProduct}=="f1d0", TAG+="uaccess"

#  Neowave Keydo and Keydo AES
KERNEL=="hidraw*", SUBSYSTEM=="hidraw", ATTRS{idVendor}=="1e0d", ATTRS{idProduct}=="f1d0|f1ae", TAG+="uaccess"

# HyperSecu HyperFIDO
KERNEL=="hidraw*", SUBSYSTEM=="hidraw", ATTRS{idVendor}=="096e", ATTRS{idProduct}=="0880", TAG+="uaccess"

LABEL="u2f_end"
</code></pre>

<p>بعد از ریستارت دامون udev یا با ریستارت سیستم این قوانین فعال می‌شوند. مرورگر گوگل کروم به صورت پیش‌فرض از این کلیدها پشتیبانی می‌کند و نیاز به کار خاصی نیست. فایرفاکس هم مشغول پیاده‌سازی این قابلیت است. حالا می‌توان در تنظیمات امنیتی گوگل و گیت‌ها و هر سایت دیگری که از U2F پشتیبانی می‌کند و جزو کنسرسیوم fido است، کلید‌سخت‌فازاری‌مان را رجیستر کنیم و از آن برای گام دوم لاگین استفاده کنیم.</p>

<h1 id="تهیه-پیشتیبان-فیزیکی-از-کلیدها">تهیه پیشتیبان فیزیکی از کلیدها</h1>
<p>از اینجا به بعد ما کاری با کلید Happlink یا همان plug-up نداریم. این کلید فقط برای تولید پسورد بدرد می‌خورد و قابلیت ذخیره کلید خصوصی ندارد. البته گویا نسخه جدیدش اینکار را انجام می‌دهد ولی من قدیمی‌اش را دارم. برای اینکار ما از Yubikey 4 استفاده می‌کنیم. اولین مرحله تهیه نسخه پشتبیان از کلید خصوصی‌مان است. اگر کلیدی ندارید باید با دستور gpg –gen-key  یکی بسازید.</p>

<pre dir="ltr"><code>gpg --armor --export &gt; pgp-public-keys.asc
gpg --armor --export-secret-keys &gt; pgp-private-keys.asc
gpg --armor --gen-revoke [your key ID] &gt; pgp-revocation.asc
</code></pre>
<p>خروجی دستورات بالا را پرینت کنید و همچنین روی یک سی‌دی رایت کنید و در جای مطمئنی نگهداری کنید. در غیر اینصورت اگر این فایل‌ها از بین بروند و یا در صورتی که بعد از انتقال آنها به کلیدسخت‌‌افزاری، کلید گم یا خراب بشود، دیگر امکان دست‌یابی به محتوای وابسته به این کلید وجود نخواهد داشت. من خروجی دستورات بالا را به QR کد تبدیل و چاپ کردم که بازگردانی آن راحت‌تر باشد. راهنمای لازم را روی <a href="https://github.com/4bitfocus/asc-key-to-qr-code">گیت‌هاب</a> پیدا می‌کنید.</p>

<h1 id="openpgp-smartcard-support">OpenPGP Smartcard Support</h1>
<p>برای فعال کردن قابلیت اسمارت‌کار برای اپن‌پی‌جی‌پی باید بسته‌های زیر را نصب و سرویس مربوطه را فعال کنیم:</p>

<pre dir="ltr"><code>$ sudo pacman -S pcsc-tools, ccid, libusb-compat
$ sudo systemctl enable pcscd.serviceand
$ sudo systemctl start pcscd.service
</code></pre>

<p>اگر همه چیز درست انجام شود می‌توانیم وضعیت اسمارت‌کارتمان را چک کنیم:</p>

<pre dir="ltr"><code># Check card status
[mehdi@x250 ~]$ gpg --card-status
Reader ...........: Yubico Yubikey 4 OTP U2F CCID 00 00
Application ID ...: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
Version ..........: 2.1
Manufacturer .....: Yubico
Serial number ....: XXXXXXXX
Name of cardholder: [not set]
Language prefs ...: [not set]
Sex ..............: unspecified
URL of public key : [not set]
Login data .......: [not set]
Signature PIN ....: not forced
Key attributes ...: rsa2048 rsa2048 rsa2048
Max. PIN lengths .: 127 127 127
PIN retry counter : 3 0 3
Signature counter : 0
Signature key ....: [none]
Encryption key....: [none]
Authentication key: [none]
General key info..: [none]
</code></pre>
<p>ابزار دیگری نیز برای اینکار هست بنام <code dir="ltr">pcsc_scan</code>. حالا می‌توانیم کلیدها را روی کارت منتقل کنیم.</p>

<pre dir="ltr"><code>[mehdi@x250 ~]$ gpg --edit-key mehdi@mehdix.ir
gpg (GnuPG) 2.1.12; Copyright (C) 2016 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Secret key is available.

sec  rsa2048/2E292C9F
     created: 2016-05-16  expires: 2017-05-16  usage: SC  
     trust: ultimate      validity: ultimate
ssb  rsa2048/82B64022
     created: 2016-05-16  expires: 2017-05-16  usage: E   
[ultimate] (1). Mehdi Sadeghi &lt;mehdi@mehdix.ir&gt;

gpg&gt;  key 1

sec  rsa2048/2E292C9F
     created: 2016-05-16  expires: 2017-05-16  usage: SC  
     trust: ultimate      validity: ultimate
ssb* rsa2048/82B64022
     created: 2016-05-16  expires: 2017-05-16  usage: E   
[ultimate] (1). Mehdi Sadeghi &lt;mehdi@mehdix.ir&gt;

gpg&gt; keytocard

Please select where to store the key:
   (1) Signature key
Your selection? 1
</code></pre>
<p>اگر هم چندین کلید داریم با تکرار دستور <code dir="ltr">keytocard</code> می‌توانیم همه آنها را منتقل کنیم. با این دستور اول باید پسورد کلید خصوصی را وارد کنیم بعد هم پسورد ادمین کلید را. موقع خروج هم تنظیمات را ذخیره می‌کنیم:</p>

<pre dir="ltr"><code>gpg&gt; quit
Save changes? (y/N) y
</code></pre>

<p>پسورد ادمین پیش‌فرض یوبی‌کی <code dir="ltr">12345678</code> و پین پیش‌فرض آن <code dir="ltr">123456</code> است. با روش زیر می‌توان تنظیمات اسمارت‌کارت را تغییر داد:</p>

<pre dir="ltr"><code>[mehdi@x250 ~]$ gpg --card-edit
gpg/card&gt; help
quit           quit this menu
admin          show admin commands
help           show this help
list           list all available data
fetch          fetch the key specified in the card URL
passwd         menu to change or unblock the PIN
verify         verify the PIN and list all data
unblock        unblock the PIN using a Reset Code
</code></pre>

<p>#نتیجه‌گیری
طی این مقاله ما کلیدهای خصوصی را از روی هارددیسک منتقل کردیم به یک کلید سخت‌افزاری. موقع استفاده از GnuPG برای امضای دیجیتال یا رمزنگاری یا رمزگشایی باید کلید به کامپیوتر متصل باشد. همچنین می‌توان با آپلود کلیدهای عمومی به اینترنت در هرکجا فقط با همراه داشتن کلید سخت‌افزاری به عملیات‌های مرتبط دسترسی پیدا کرد.</p>

<p>اطلاعات بیشتر:</p>

<ol>
  <li><a href="https://developers.yubico.com/PGP/Importing_keys.html">Yubikey 4 PGP Guide</a></li>
  <li><a href="https://malcolmsparks.com/posts/yubikey-gpg.html">مشابه همین مقاله به انگلیسی</a></li>
</ol>
</div>]]>
			</content>
	</entry>

</feed>
